@model X.PagedList.IPagedList<APP_DATA.Models.NhanVien>
@using APP_DATA.Context;
@using X.PagedList
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "GetAllNhanVien";
}
<!-- Gắn liên kết đến tệp CSS của Bootstrap 5 -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<h1>Danh sách nhân viên</h1>

<style>
    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .pagination li {
            margin: 0 5px;
        }

        .pagination a {
            text-decoration: none;
            color: #007bff;
            border: 1px solid #007bff;
            padding: 5px 10px;
            border-radius: 5px;
            transition: background-color 0.3s, color 0.3s;
        }

            .pagination a:hover {
                background-color: #007bff;
                color: #fff;
            }

        .pagination .disabled a {
            pointer-events: none;
            cursor: default;
            color: #6c757d;
            border-color: #6c757d;
            background-color: #fff;
        }
</style>

<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("GetAllNhanVien", new { page }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
</div>


<p>
    <a class="btn btn-primary" asp-action="AddNhanVien">Create New</a>
</p>
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Mã</th>
                <th>Tên</th>
                <th>SĐT</th>
                <th>Email</th>
                <th>Địa chỉ</th>
                <th>Mật khẩu</th>
                <th>Role</th>
                <th>Trạng thái</th>
                <th class="d-none">IDRole</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                MyDbContext context = new MyDbContext();
                var check = context.Roles.SingleOrDefault(r => r.Id == item.IDRole);
                string role = check.Ten;
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Ma)</td>
                    <td>@Html.DisplayFor(modelItem => item.Ten)</td>
                    <td>@Html.DisplayFor(modelItem => item.SDT)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.DiaChi)</td>
                    <td>@Html.DisplayFor(modelItem => item.MatKhau)</td>
                    <td>@Html.DisplayFor(modelItem => role)</td>
                    <td>@Html.DisplayFor(modelItem => item.TrangThai)</td>
                    <td class="d-none">@Html.DisplayFor(modelItem => item.IDRole)</td>
                    <td>
                        <a class="btn btn-secondary" asp-action="UpdateNhanVien" asp-route-id="@item.ID">Update</a> |
                        <a class="btn btn-info" asp-action="DetailsNhanVien" asp-route-id="@item.ID">Details</a> |
                        <a class="btn btn-danger" asp-action="DeleteNhanVien" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("GetAllNhanVien", new { page }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
</div>
</div>
